#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define MAX 10240

int total = 0;
int n1, n2;
char *s1, *s2;
FILE *fp;

int readf() {
    if ((fp = fopen("strings.txt", "r")) == NULL) {
        printf("ERROR: can't open strings.txt!\n");
        return 0;
    }
    s1 = (char *)malloc(sizeof(char) * MAX);
    s2 = (char *)malloc(sizeof(char) * MAX);
    if (!s1 || !s2) {
        printf("ERROR: Out of memory!\n");
        return -1;
    }

    if (fgets(s1, MAX, fp) == NULL || fgets(s2, MAX, fp) == NULL) {
        printf("ERROR: failed to read strings\n");
        return -1;
    }
    fclose(fp);

    // Remove trailing newlines
    n1 = strlen(s1);
    if (s1[n1 - 1] == '\n') {
        s1[n1 - 1] = '\0';
        n1--;
    }

    n2 = strlen(s2);
    if (s2[n2 - 1] == '\n') {
        s2[n2 - 1] = '\0';
        n2--;
    }

    if (n1 < n2) return -1;
    return 0;
}

int num_substring() {
    total = 0;
    for (int i = 0; i <= n1 - n2; i++) {
        int j;
        for (j = 0; j < n2; j++) {
            if (s1[i + j] != s2[j])
                break;
        }
        if (j == n2)
            total++;
    }
    return total;
}

int main() {
    if (readf() != 0) {
        printf("Error reading strings\n");
        return 1;
    }

    int count = num_substring();
    printf("The number of substrings is: %d\n", count);

    free(s1);
    free(s2);
    return 0;
}
